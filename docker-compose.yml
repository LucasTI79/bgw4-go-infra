networks:
  mynetwork:
services:
  mysql:
    image: mysql:latest
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$MYSQL_ROOT_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  mail:
    image: 'jcalonso/mailhog:latest'
    ports:
      # - "1025:1025" ## SMTP
      - "8025:8025" ## UI
  api:
    build: 
      context: .
      dockerfile: Dockerfile-go
    ports:
      - 8080:8080
    volumes:
      - .:/go/src/app
  
  meucontainer:
    ## imagem pronta
    ## image: ubuntu:20.04
    ## imagem customizada
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: meucontainernomeado
    environment:
      PROFESSOR: lucas
    restart: always
    volumes:
      # usando o volume nomeado
      - myvol:/var/log
      # usando um volume montado no sistema de arquivos
      - ./.data:/var/log
    networks:
      - mynetwork
  portainer:
    image: portainer/portainer-ce
    container_name: bgw4-portainer
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  # volume nomeado
  myvol:
  portainer_data:
  db_data: